/*Copyright (c) 2017-2018 Breakout.MX All Rights Reserved.
 This software is the confidential and proprietary information of breakout.mx You shall not disclose such Confidential Information and shall use it only in accordance
 with the terms of the source code license agreement you entered into with Breakout.MX*/
package com.digimo_pro.herokumysqldmp1;

/*This is a Studio Managed File. DO NOT EDIT THIS FILE. Your changes may be reverted by Studio.*/

import java.io.Serializable;
import java.sql.Timestamp;
import java.util.Objects;

import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import javax.persistence.GenerationType;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.Table;

/**
 * Card generated by WaveMaker Studio.
 */
@Entity
@Table(name = "`card`")
public class Card implements Serializable {

    private Integer id;
    private Integer user;
    private Integer profile;
    private Timestamp created;
    private String last4;
    private String brand;
    private String country;
    private String zip;
    private Integer expmonth;
    private String expyear;
    private String fingerprint;
    private String fundingtype;
    private Integer charges;
    private Integer customer;
    private Users users;
    private Customer customerByCustomer;
    private Charge charge;
    private Profile profileByProfile;

    @Id
    @GeneratedValue(strategy = GenerationType.IDENTITY)
    @Column(name = "`ID`", nullable = false, scale = 0, precision = 10)
    public Integer getId() {
        return this.id;
    }

    public void setId(Integer id) {
        this.id = id;
    }

    @Column(name = "`USER`", nullable = true, scale = 0, precision = 10)
    public Integer getUser() {
        return this.user;
    }

    public void setUser(Integer user) {
        this.user = user;
    }

    @Column(name = "`PROFILE`", nullable = true, scale = 0, precision = 10)
    public Integer getProfile() {
        return this.profile;
    }

    public void setProfile(Integer profile) {
        this.profile = profile;
    }

    @Column(name = "`CREATED`", nullable = true)
    public Timestamp getCreated() {
        return this.created;
    }

    public void setCreated(Timestamp created) {
        this.created = created;
    }

    @Column(name = "`LAST4`", nullable = true, length = 255)
    public String getLast4() {
        return this.last4;
    }

    public void setLast4(String last4) {
        this.last4 = last4;
    }

    @Column(name = "`BRAND`", nullable = true, length = 255)
    public String getBrand() {
        return this.brand;
    }

    public void setBrand(String brand) {
        this.brand = brand;
    }

    @Column(name = "`COUNTRY`", nullable = true, length = 255)
    public String getCountry() {
        return this.country;
    }

    public void setCountry(String country) {
        this.country = country;
    }

    @Column(name = "`ZIP`", nullable = true, length = 255)
    public String getZip() {
        return this.zip;
    }

    public void setZip(String zip) {
        this.zip = zip;
    }

    @Column(name = "`EXPMONTH`", nullable = true, scale = 0, precision = 10)
    public Integer getExpmonth() {
        return this.expmonth;
    }

    public void setExpmonth(Integer expmonth) {
        this.expmonth = expmonth;
    }

    @Column(name = "`EXPYEAR`", nullable = true, length = 255)
    public String getExpyear() {
        return this.expyear;
    }

    public void setExpyear(String expyear) {
        this.expyear = expyear;
    }

    @Column(name = "`FINGERPRINT`", nullable = true, length = 255)
    public String getFingerprint() {
        return this.fingerprint;
    }

    public void setFingerprint(String fingerprint) {
        this.fingerprint = fingerprint;
    }

    @Column(name = "`FUNDINGTYPE`", nullable = true, length = 255)
    public String getFundingtype() {
        return this.fundingtype;
    }

    public void setFundingtype(String fundingtype) {
        this.fundingtype = fundingtype;
    }

    @Column(name = "`CHARGES`", nullable = true, scale = 0, precision = 10)
    public Integer getCharges() {
        return this.charges;
    }

    public void setCharges(Integer charges) {
        this.charges = charges;
    }

    @Column(name = "`CUSTOMER`", nullable = true, scale = 0, precision = 10)
    public Integer getCustomer() {
        return this.customer;
    }

    public void setCustomer(Integer customer) {
        this.customer = customer;
    }

    @ManyToOne(fetch = FetchType.EAGER)
    @JoinColumn(name = "`USER`", referencedColumnName = "`ID`", insertable = false, updatable = false)
    public Users getUsers() {
        return this.users;
    }

    public void setUsers(Users users) {
        if(users != null) {
            this.user = users.getId();
        }

        this.users = users;
    }

    @ManyToOne(fetch = FetchType.EAGER)
    @JoinColumn(name = "`CUSTOMER`", referencedColumnName = "`ID`", insertable = false, updatable = false)
    public Customer getCustomerByCustomer() {
        return this.customerByCustomer;
    }

    public void setCustomerByCustomer(Customer customerByCustomer) {
        if(customerByCustomer != null) {
            this.customer = customerByCustomer.getId();
        }

        this.customerByCustomer = customerByCustomer;
    }

    @ManyToOne(fetch = FetchType.EAGER)
    @JoinColumn(name = "`CHARGES`", referencedColumnName = "`ID`", insertable = false, updatable = false)
    public Charge getCharge() {
        return this.charge;
    }

    public void setCharge(Charge charge) {
        if(charge != null) {
            this.charges = charge.getId();
        }

        this.charge = charge;
    }

    @ManyToOne(fetch = FetchType.EAGER)
    @JoinColumn(name = "`PROFILE`", referencedColumnName = "`ID`", insertable = false, updatable = false)
    public Profile getProfileByProfile() {
        return this.profileByProfile;
    }

    public void setProfileByProfile(Profile profileByProfile) {
        if(profileByProfile != null) {
            this.profile = profileByProfile.getId();
        }

        this.profileByProfile = profileByProfile;
    }

    @Override
    public boolean equals(Object o) {
        if (this == o) return true;
        if (!(o instanceof Card)) return false;
        final Card card = (Card) o;
        return Objects.equals(getId(), card.getId());
    }

    @Override
    public int hashCode() {
        return Objects.hash(getId());
    }
}

